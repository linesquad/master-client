/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as appFindRouteImport } from './routes/(app)/find'
import { Route as AuthenticatedProfileRouteRouteImport } from './routes/_authenticated/profile/route'
import { Route as AuthenticatedProfileIndexRouteImport } from './routes/_authenticated/profile/index'
import { Route as AuthenticatedProfileNotificationsRouteImport } from './routes/_authenticated/profile/notifications'
import { Route as appProfileIdRouteImport } from './routes/(app)/profile/$id'

const appContactLazyRouteImport = createFileRoute('/(app)/contact')()
const appClientProfileLazyRouteImport = createFileRoute(
  '/(app)/client-profile',
)()
const appAboutLazyRouteImport = createFileRoute('/(app)/about')()

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const appContactLazyRoute = appContactLazyRouteImport
  .update({
    id: '/contact',
    path: '/contact',
    getParentRoute: () => appRouteRoute,
  } as any)
  .lazy(() => import('./routes/(app)/contact.lazy').then((d) => d.Route))
const appClientProfileLazyRoute = appClientProfileLazyRouteImport
  .update({
    id: '/client-profile',
    path: '/client-profile',
    getParentRoute: () => appRouteRoute,
  } as any)
  .lazy(() => import('./routes/(app)/client-profile.lazy').then((d) => d.Route))
const appAboutLazyRoute = appAboutLazyRouteImport
  .update({
    id: '/about',
    path: '/about',
    getParentRoute: () => appRouteRoute,
  } as any)
  .lazy(() => import('./routes/(app)/about.lazy').then((d) => d.Route))
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appFindRoute = appFindRouteImport.update({
  id: '/find',
  path: '/find',
  getParentRoute: () => appRouteRoute,
} as any)
const AuthenticatedProfileRouteRoute =
  AuthenticatedProfileRouteRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedProfileIndexRoute =
  AuthenticatedProfileIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedProfileRouteRoute,
  } as any)
const AuthenticatedProfileNotificationsRoute =
  AuthenticatedProfileNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedProfileRouteRoute,
  } as any)
const appProfileIdRoute = appProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/profile': typeof AuthenticatedProfileRouteRouteWithChildren
  '/find': typeof appFindRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/about': typeof appAboutLazyRoute
  '/client-profile': typeof appClientProfileLazyRoute
  '/contact': typeof appContactLazyRoute
  '/profile/$id': typeof appProfileIdRoute
  '/profile/notifications': typeof AuthenticatedProfileNotificationsRoute
  '/profile/': typeof AuthenticatedProfileIndexRoute
}
export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteWithChildren
  '/find': typeof appFindRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/about': typeof appAboutLazyRoute
  '/client-profile': typeof appClientProfileLazyRoute
  '/contact': typeof appContactLazyRoute
  '/': typeof appIndexRoute
  '/profile/$id': typeof appProfileIdRoute
  '/profile/notifications': typeof AuthenticatedProfileNotificationsRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/profile': typeof AuthenticatedProfileRouteRouteWithChildren
  '/(app)/find': typeof appFindRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(app)/about': typeof appAboutLazyRoute
  '/(app)/client-profile': typeof appClientProfileLazyRoute
  '/(app)/contact': typeof appContactLazyRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/profile/$id': typeof appProfileIdRoute
  '/_authenticated/profile/notifications': typeof AuthenticatedProfileNotificationsRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/profile'
    | '/find'
    | '/login'
    | '/register'
    | '/about'
    | '/client-profile'
    | '/contact'
    | '/profile/$id'
    | '/profile/notifications'
    | '/profile/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/find'
    | '/login'
    | '/register'
    | '/about'
    | '/client-profile'
    | '/contact'
    | '/'
    | '/profile/$id'
    | '/profile/notifications'
    | '/profile'
  id:
    | '__root__'
    | '/(app)'
    | '/_authenticated'
    | '/_authenticated/profile'
    | '/(app)/find'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(app)/about'
    | '/(app)/client-profile'
    | '/(app)/contact'
    | '/(app)/'
    | '/(app)/profile/$id'
    | '/_authenticated/profile/notifications'
    | '/_authenticated/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/(app)/find': {
      id: '/(app)/find'
      path: '/find'
      fullPath: '/find'
      preLoaderRoute: typeof appFindRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/about': {
      id: '/(app)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof appAboutLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/client-profile': {
      id: '/(app)/client-profile'
      path: '/client-profile'
      fullPath: '/client-profile'
      preLoaderRoute: typeof appClientProfileLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/contact': {
      id: '/(app)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof appContactLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile/$id': {
      id: '/(app)/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof appProfileIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/_authenticated/profile/notifications': {
      id: '/_authenticated/profile/notifications'
      path: '/notifications'
      fullPath: '/profile/notifications'
      preLoaderRoute: typeof AuthenticatedProfileNotificationsRouteImport
      parentRoute: typeof AuthenticatedProfileRouteRoute
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof AuthenticatedProfileIndexRouteImport
      parentRoute: typeof AuthenticatedProfileRouteRoute
    }
    '/(app)/contact': {
      id: '/(app)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof appContactLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/client-profile': {
      id: '/(app)/client-profile'
      path: '/client-profile'
      fullPath: '/client-profile'
      preLoaderRoute: typeof appClientProfileLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/about': {
      id: '/(app)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof appAboutLazyRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

declare module './routes/(app)/route' {
  const createFileRoute: CreateFileRoute<
    '/(app)',
    FileRoutesByPath['/(app)']['parentRoute'],
    FileRoutesByPath['/(app)']['id'],
    FileRoutesByPath['/(app)']['path'],
    FileRoutesByPath['/(app)']['fullPath']
  >
}
declare module './routes/_authenticated' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated',
    FileRoutesByPath['/_authenticated']['parentRoute'],
    FileRoutesByPath['/_authenticated']['id'],
    FileRoutesByPath['/_authenticated']['path'],
    FileRoutesByPath['/_authenticated']['fullPath']
  >
}
declare module './routes/_authenticated/profile/route' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated/profile',
    FileRoutesByPath['/_authenticated/profile']['parentRoute'],
    FileRoutesByPath['/_authenticated/profile']['id'],
    FileRoutesByPath['/_authenticated/profile']['path'],
    FileRoutesByPath['/_authenticated/profile']['fullPath']
  >
}
declare module './routes/(app)/find' {
  const createFileRoute: CreateFileRoute<
    '/(app)/find',
    FileRoutesByPath['/(app)/find']['parentRoute'],
    FileRoutesByPath['/(app)/find']['id'],
    FileRoutesByPath['/(app)/find']['path'],
    FileRoutesByPath['/(app)/find']['fullPath']
  >
}
declare module './routes/(auth)/login' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/login',
    FileRoutesByPath['/(auth)/login']['parentRoute'],
    FileRoutesByPath['/(auth)/login']['id'],
    FileRoutesByPath['/(auth)/login']['path'],
    FileRoutesByPath['/(auth)/login']['fullPath']
  >
}
declare module './routes/(auth)/register' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/register',
    FileRoutesByPath['/(auth)/register']['parentRoute'],
    FileRoutesByPath['/(auth)/register']['id'],
    FileRoutesByPath['/(auth)/register']['path'],
    FileRoutesByPath['/(auth)/register']['fullPath']
  >
}
declare module './routes/(app)/about.lazy' {
  const createLazyFileRoute: CreateLazyFileRoute<
    FileRoutesByPath['/(app)/about']['preLoaderRoute']
  >
}
declare module './routes/(app)/client-profile.lazy' {
  const createLazyFileRoute: CreateLazyFileRoute<
    FileRoutesByPath['/(app)/client-profile']['preLoaderRoute']
  >
}
declare module './routes/(app)/contact.lazy' {
  const createLazyFileRoute: CreateLazyFileRoute<
    FileRoutesByPath['/(app)/contact']['preLoaderRoute']
  >
}
declare module './routes/(app)/index' {
  const createFileRoute: CreateFileRoute<
    '/(app)/',
    FileRoutesByPath['/(app)/']['parentRoute'],
    FileRoutesByPath['/(app)/']['id'],
    FileRoutesByPath['/(app)/']['path'],
    FileRoutesByPath['/(app)/']['fullPath']
  >
}
declare module './routes/(app)/profile/$id' {
  const createFileRoute: CreateFileRoute<
    '/(app)/profile/$id',
    FileRoutesByPath['/(app)/profile/$id']['parentRoute'],
    FileRoutesByPath['/(app)/profile/$id']['id'],
    FileRoutesByPath['/(app)/profile/$id']['path'],
    FileRoutesByPath['/(app)/profile/$id']['fullPath']
  >
}
declare module './routes/_authenticated/profile/notifications' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated/profile/notifications',
    FileRoutesByPath['/_authenticated/profile/notifications']['parentRoute'],
    FileRoutesByPath['/_authenticated/profile/notifications']['id'],
    FileRoutesByPath['/_authenticated/profile/notifications']['path'],
    FileRoutesByPath['/_authenticated/profile/notifications']['fullPath']
  >
}
declare module './routes/_authenticated/profile/index' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated/profile/',
    FileRoutesByPath['/_authenticated/profile/']['parentRoute'],
    FileRoutesByPath['/_authenticated/profile/']['id'],
    FileRoutesByPath['/_authenticated/profile/']['path'],
    FileRoutesByPath['/_authenticated/profile/']['fullPath']
  >
}

interface appRouteRouteChildren {
  appFindRoute: typeof appFindRoute
  appAboutLazyRoute: typeof appAboutLazyRoute
  appClientProfileLazyRoute: typeof appClientProfileLazyRoute
  appContactLazyRoute: typeof appContactLazyRoute
  appIndexRoute: typeof appIndexRoute
  appProfileIdRoute: typeof appProfileIdRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appFindRoute: appFindRoute,
  appAboutLazyRoute: appAboutLazyRoute,
  appClientProfileLazyRoute: appClientProfileLazyRoute,
  appContactLazyRoute: appContactLazyRoute,
  appIndexRoute: appIndexRoute,
  appProfileIdRoute: appProfileIdRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

interface AuthenticatedProfileRouteRouteChildren {
  AuthenticatedProfileNotificationsRoute: typeof AuthenticatedProfileNotificationsRoute
  AuthenticatedProfileIndexRoute: typeof AuthenticatedProfileIndexRoute
}

const AuthenticatedProfileRouteRouteChildren: AuthenticatedProfileRouteRouteChildren =
  {
    AuthenticatedProfileNotificationsRoute:
      AuthenticatedProfileNotificationsRoute,
    AuthenticatedProfileIndexRoute: AuthenticatedProfileIndexRoute,
  }

const AuthenticatedProfileRouteRouteWithChildren =
  AuthenticatedProfileRouteRoute._addFileChildren(
    AuthenticatedProfileRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRouteRoute: typeof AuthenticatedProfileRouteRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRouteRoute: AuthenticatedProfileRouteRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
