/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as appContactRouteImport } from './routes/(app)/contact'
import { Route as appFindRouteImport } from './routes/(app)/Find'
import { Route as appProfileIdRouteImport } from './routes/(app)/profile/$id'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appContactRoute = appContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => appRouteRoute,
} as any)
const appFindRoute = appFindRouteImport.update({
  id: '/Find',
  path: '/Find',
  getParentRoute: () => appRouteRoute,
} as any)
const appProfileIdRoute = appProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '': typeof AuthenticatedRoute
  '/Find': typeof appFindRoute
  '/contact': typeof appContactRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/profile/$id': typeof appProfileIdRoute
}
export interface FileRoutesByTo {
  '': typeof AuthenticatedRoute
  '/Find': typeof appFindRoute
  '/contact': typeof appContactRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/': typeof appIndexRoute
  '/profile/$id': typeof appProfileIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRoute
  '/(app)/Find': typeof appFindRoute
  '/(app)/contact': typeof appContactRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/profile/$id': typeof appProfileIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/Find'
    | '/contact'
    | '/login'
    | '/register'
    | '/profile/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/Find' | '/contact' | '/login' | '/register' | '/' | '/profile/$id'
  id:
    | '__root__'
    | '/(app)'
    | '/_authenticated'
    | '/(app)/Find'
    | '/(app)/contact'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(app)/'
    | '/(app)/profile/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/Find': {
      id: '/(app)/Find'
      path: '/Find'
      fullPath: '/Find'
      preLoaderRoute: typeof appFindRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/contact': {
      id: '/(app)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof appContactRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile/$id': {
      id: '/(app)/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof appProfileIdRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

declare module './routes/(app)/route' {
  const createFileRoute: CreateFileRoute<
    '/(app)',
    FileRoutesByPath['/(app)']['parentRoute'],
    FileRoutesByPath['/(app)']['id'],
    FileRoutesByPath['/(app)']['path'],
    FileRoutesByPath['/(app)']['fullPath']
  >
}
declare module './routes/_authenticated' {
  const createFileRoute: CreateFileRoute<
    '/_authenticated',
    FileRoutesByPath['/_authenticated']['parentRoute'],
    FileRoutesByPath['/_authenticated']['id'],
    FileRoutesByPath['/_authenticated']['path'],
    FileRoutesByPath['/_authenticated']['fullPath']
  >
}
declare module './routes/(app)/Find' {
  const createFileRoute: CreateFileRoute<
    '/(app)/Find',
    FileRoutesByPath['/(app)/Find']['parentRoute'],
    FileRoutesByPath['/(app)/Find']['id'],
    FileRoutesByPath['/(app)/Find']['path'],
    FileRoutesByPath['/(app)/Find']['fullPath']
  >
}
declare module './routes/(app)/contact' {
  const createFileRoute: CreateFileRoute<
    '/(app)/contact',
    FileRoutesByPath['/(app)/contact']['parentRoute'],
    FileRoutesByPath['/(app)/contact']['id'],
    FileRoutesByPath['/(app)/contact']['path'],
    FileRoutesByPath['/(app)/contact']['fullPath']
  >
}
declare module './routes/(auth)/login' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/login',
    FileRoutesByPath['/(auth)/login']['parentRoute'],
    FileRoutesByPath['/(auth)/login']['id'],
    FileRoutesByPath['/(auth)/login']['path'],
    FileRoutesByPath['/(auth)/login']['fullPath']
  >
}
declare module './routes/(auth)/register' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/register',
    FileRoutesByPath['/(auth)/register']['parentRoute'],
    FileRoutesByPath['/(auth)/register']['id'],
    FileRoutesByPath['/(auth)/register']['path'],
    FileRoutesByPath['/(auth)/register']['fullPath']
  >
}
declare module './routes/(app)/index' {
  const createFileRoute: CreateFileRoute<
    '/(app)/',
    FileRoutesByPath['/(app)/']['parentRoute'],
    FileRoutesByPath['/(app)/']['id'],
    FileRoutesByPath['/(app)/']['path'],
    FileRoutesByPath['/(app)/']['fullPath']
  >
}
declare module './routes/(app)/profile/$id' {
  const createFileRoute: CreateFileRoute<
    '/(app)/profile/$id',
    FileRoutesByPath['/(app)/profile/$id']['parentRoute'],
    FileRoutesByPath['/(app)/profile/$id']['id'],
    FileRoutesByPath['/(app)/profile/$id']['path'],
    FileRoutesByPath['/(app)/profile/$id']['fullPath']
  >
}

interface appRouteRouteChildren {
  appFindRoute: typeof appFindRoute
  appContactRoute: typeof appContactRoute
  appIndexRoute: typeof appIndexRoute
  appProfileIdRoute: typeof appProfileIdRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appFindRoute: appFindRoute,
  appContactRoute: appContactRoute,
  appIndexRoute: appIndexRoute,
  appProfileIdRoute: appProfileIdRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
